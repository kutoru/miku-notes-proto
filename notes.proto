syntax = "proto3";

import "tags.proto";
import "files.proto";

package notes;

service Notes {
    rpc CreateNote (CreateNoteReq) returns (Note);
    rpc ReadNotes (ReadNotesReq) returns (NoteList);
    rpc UpdateNote (UpdateNoteReq) returns (Note);
    rpc DeleteNote (DeleteNoteReq) returns (Empty);

    rpc AttachTag (AttachTagReq) returns (Empty);
    rpc DetachTag (DetachTagReq) returns (Empty);
}

message Empty {}

message Note {
    int32 id = 1;
    int32 user_id = 2;
    string title = 3;
    string text = 4;
    int64 created = 5;
    int64 last_edited = 6;
    int32 times_edited = 7;
    repeated tags.Tag tags = 8;
    repeated files.File files = 9;
}

message NoteList {
    repeated Note notes = 1;
}

message CreateNoteReq {
    int32 user_id = 1;
    string title = 2;
    string text = 3;
}

message Sort {
    bool asc = 1;
    SortType sort_type = 2;

    enum SortType {
        DATE = 0;
        DATE_MODIF = 1;
        TITLE = 2;
    }
}

message Filters {
    optional FilterTags filter_tags = 1;
    optional FilterDate filter_date = 2;
    optional FilterDateModif filter_date_modif = 3;
    optional FilterSearch filter_search = 4;

    message FilterTags { repeated int32 tag_ids = 1; }
    message FilterDate { int64 start = 1; int64 end = 2; }
    message FilterDateModif { int64 start = 1; int64 end = 2; }
    message FilterSearch { string query = 1; }
}

message ReadNotesReq {
    int32 user_id = 1;
    Sort sort = 2;
    Filters filters = 3;
}

message UpdateNoteReq {
    int32 id = 1;
    int32 user_id = 2;
    string title = 3;
    string text = 4;
}

message DeleteNoteReq {
    int32 id = 1;
    int32 user_id = 2;
}

message AttachTagReq {
    int32 user_id = 1;
    int32 note_id = 2;
    int32 tag_id = 3;
}

message DetachTagReq {
    int32 user_id = 1;
    int32 note_id = 2;
    int32 tag_id = 3;
}
